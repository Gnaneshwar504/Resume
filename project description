

Frontend Projects Resume Descriptions
Static Websites
1. Tourism Website
Developed tourism website where users can browse through the content, videos and images of popular destinations.
Implemented mobile friendly layout using different HTML block, inline elements, and Styled using CSS3 properties such as background, flex, and CSS box model properties.
Implemented multiple images of a particular destination in a carousel using bootstrap carousel and virtual tour videos using bootstrap embed component.
Technologies used: HTML, CSS, Bootstrap
2. Conference Website
Developed a conference website where users can see information about conference like attendees count, workshops, speakers and countries attended, after movie of conference
Implemented mobile friendly layout using different HTML block, inline elements, and Styled using CSS3 properties such as background, flex, and CSS box model properties.
Implemented Conference video using bootstrap embed component.
Technologies used: HTML, CSS, Bootstrap
3. Popular Podcasts (Podcasts Page)
Developed a website where users can see different podcasts by different people and each podcast with speaker name and number of episodes
Designed a banner section and the project cards using different HTML block, inline elements.
Styled the website using CSS3 properties such as background, flex, and CSS box model properties and relative units such as vh, vw, and used absolute units such as px.
Technologies used: HTML, CSS, Bootstrap
4. My Projects (My Projects Page)
Developed a website where people like interviewers can see list of projects that a person implemented
Designed a banner section and the project cards using different HTML block, inline elements.
Styled the website using CSS3 properties such as background, flex, and CSS box model properties and relative units such as vh, vw, and used absolute units such as px.
Technologies used: HTML, CSS, Bootstrap
5. My Library ( Books Page)
Designed a static website where users can find out about my recommendations of books and info about popular books.
Designed a banner section that contains the most popular book that I like using different HTML block, inline elements.
Styled the website using CSS3 properties such as background, flex, and CSS box model properties and relative units such as vh, vw, and used absolute units such as px.
Technologies used: HTML, CSS, Bootstrap
Responsive Websites
1. Food Munch
Developed a responsive website for Food Store where users can see a list of food items, detailed information about a food item, offers
Designed page using following HTML structure elements like li, header, article, footer elements and different bootstrap components to show different sections in the website and different bootstrap classes for responsiveness through mobile-first approach.
Implemented product youtube videos by using bootstrap embed and model components
Technologies used: HTML, CSS, Bootstrap
2. E Commerce Website
Developed E Commerce website where users can go through different products, detailed information about a product, offers and contact us info.
Designed page using following HTML structure elements and footer elements by using different bootstrap components to show different sections in the website and different bootstrap classes for responsiveness through mobile-first approach.
Implemented product youtube videos by using bootstrap embed and model components and displayed multiple images of offers in a carousel using bootstrap carousel.
Technologies used: HTML, CSS, Bootstrap
3. VR Products Store ( VR Website)
Developed a responsive website for VR products where user can see list of products, detailed information about a product and trending blogs, contact us info
Designed page using HTML structure elements ,footer elements by using different bootstrap components to show different sections in the website.
Implemented responsiveness by using Bootstrap grid system and flex classes and CSS box model properties through mobile-first approach.
Technologies used: HTML, CSS, Bootstrap
4. Portfolio Website
Developed a responsive website for Portfolio of a person where other people like interviewers can see list of projects, skills, testimonials, contact info
Designed page by using HTML structure elements and by using different bootstrap components to show different sections in the website and different Bootstrap classes for responsiveness through mobile-first approach.
Displayed testimonials from different people using bootstrap carousel components.
Technologies used: HTML, CSS, Bootstrap
Dynamic Web Applications
1. Todos Application
Developed persistent todo application with CRUD operations to track list of tasks
Displayed list of todos with HTML list elements, styled todo list using CSS, Bootstrap
Implemented todo crud operations by using JavaScript event listeners and updated UI dynamically by using JavaScript DOM operations.
Used Arrays, Objects and their methods during todolist CRUD Operations, Persisted todo list state on page reloads using local storage methods.
Technologies used: HTML, CSS, JS, Bootstrap
2. Countries Search
Developed responsive countries search application which shows all countries and respective population in the world. We can also search by specific country
Fetched countries list from server asynchronously using fetch GET HTTP API call and implemented responsiveness using Bootstrap grid system and CSS box model.
Implemented local search functionality by using input element, JavaScript event listeners & filtered countries using Array filter method.
Technologies used: HTML, CSS, JS, REST API Calls, Bootstrap
3. Chatbot
Developed a mini Chatbot Application which initially wishes user and responds to user if user input matches to list of answers that chat bot maintains
Displayed conversation between user and chatbot using HTML list elements , styled using CSS, Bootstrap.
Displayed user input message using HTML form input element and reply from the chatbot dynamically in the UI by using JavaScript DOM Operations and Array push method. Implemented response from Chatbot by using Array filter method.
Technologies used: HTML, CSS, JS, Bootstrap
4. Bookmark Maker
Developed bookmark maker where user can add list of websites with custom name, and can visit bookmarked website later by clicking on the specific website
Displayed list of bookmarks with HTML list elements with hyperlink as url, styled todo list using CSS, Bootstrap.
Displayed a new bookmark dynamically in the UI by using JavaScript DOM operations when the user submitted the form with bookmark details.
Implemented add bookmark functionality by using Form inputs, JavaScript event listeners and clicking on a particular bookmark opens the website in a new tab.
Technologies used: HTML, CSS, JS, Bootstrap
5. Wikipedia Search Application
Developed custom wikipedia search application where user can search and view curated results and can see detailed explanation in wikipedia by clicking on the specific result
Displayed list of search results with HTML list elements with hyperlink as url, styled list using CSS, Bootstrap and implemented responsiveness using Flex properties and CSS Box model.
Fetched search results from server asynchronously using fetch GET HTTP API call. When a user clicks on a particular result, opens the website in a new tab by using the target attribute of the anchor tag in HTML.
Technologies used: HTML, CSS, JS, REST API Calls, Bootstrap
6. API Testing Console (Go REST Console)
Developed a web console application where users can test an api by giving API, request body and type of network call and can see the API call status and response
Developed console UI by using html form with input, select elements and styled the form using Bootstrap flex classes and CSS Box model.
Fetched Data from server asynchronously using fetch GET HTTP API call and displayed response from the API dynamically by using JavaScript DOM operations.
Technologies used: HTML, CSS, JS, REST API Calls, Bootstrap
7. Typing Speed Test
Developed an application which measuring time he took to complete given paragraph
Maintained timer by using APIs setTimeInterval, clearTimeInterval and Updated timer in the UI dynamically using JavaScript DOM operations for every 1 second.
Fetched the paragraph from server asynchronously using fetch GET HTTP API call and displayed it on UI by using JavaScript DOM Operations.
Displayed time that user took in the UI using JavaScript event listeners once user clicked on submit button, Did form validations for incomplete paragraph.
Technologies used: HTML, CSS, JS, REST API Calls, Bootstrap
8. Online Book Store ( Book Search)
Developed online bookstore which shows popular books for given words, user also can limit number of books he would like to see
Fetched the paragraph from server asynchronously using fetch GET HTTP API call and implemented responsiveness using different Bootstrap classes through mobile-first approach.
Implemented user inputs of book words and limits by using html form elements input, select and maintain that data using JavaScript event listeners.
Technologies used: HTML, CSS, JS, REST API Calls, Bootstrap
React JS Fundamentals
Portfolio
Developed a responsive web application for Portfolio where other people like interviewers can see about, education,  list of projects, skills, contact info of a person
Implemented different sections of the application using React components, props, lists, keys, State & Event Handlers.
Implemented responsiveness by using Bootstrap grid system and flex classes and CSS box model properties through mobile-first approach.
Technologies used: CSS, Bootstrap, React JS
Emoji Game
Developed responsive Emoji memory game where users can win it by clicking unique emoji each time till all displayed emojis are clicked. All emojis positions will be randomized after each click
List of Emojis is displayed by using React components, props , lists, conditional rendering, styled using CSS and randomized emojis placed using event listeners by updating react state.
Updated different game states such as emojis list, winning state and losing state by using game state variable and conditional rendering.
Technologies used: React JS, CSS, Bootstrap
Blog List
Developed simple blog list application where user can see list of blogs in user profile section
Implemented blog list using React component, props, lists & keys and achieved responsiveness using bootstrap flex classes and CSS box model through mobile-first approach.
Fetched blogs data from server asynchronously using fetch GET HTTP API call.
Technologies used: React JS, REST API Calls, CSS, Bootstrap
Cryptocurrency Tracker
Developed an cryptocurrency tracker application where user can see available crypto currencies and their market price
Implemented cryptocurrencies table using React components & bootstrap table classes and achieved responsiveness using bootstrap flex classes and CSS box model through mobile-first approach.
Fetched cryptocurrencies data from server asynchronously using fetch GET HTTP API call.
Technologies used: React JS, REST API Calls, CSS, Bootstrap
Github Popular Repos
Developed a web application where user can see popular github repos and can be filtered through a selected programming language
Implemented repos list using React component, props, lists & keys and achieved responsiveness using bootstrap flex classes and CSS box model through mobile-first approach.
Fetched repos particular to a language from server asynchronously using fetch GET HTTP API call by sending selected language in query parameter.
Technologies used: React JS, REST API Calls, CSS, Bootstrap
IPL Dashboard
Implemented IPL Dashboard app where users can list of ipl team, individual team details and respective team matches info
Implemented UI such as home dashboard, individual team info routes by using React Router library components like Route, Switch, Link, props, lists & keys.
Fetched teams list from server asynchronously using fetch GET HTTP API call & individual team details, matches info by sending team id as path parameter.
Implemented 404 not found page for invalid paths by keeping 404 Route as last route in the Switch component with * path.
Technologies used: React JS, Routing, REST API Calls, CSS, Bootstrap
Nxt Trendz ( ECommerce Clone - Amazon, Flipkart)
Implemented Nxt Trendz application which is a clone for ECommerce applications like Amazon, Flipkart where users can login and can see list of products with search, filters, sort by, etc..
Implemented Different pages and routes for Login, Products, Product details using React Router components Route, Switch, Link, props, state, lists, event handlers, form inputs.
Authenticating and authorizing users by taking username, password and doing login POST HTTP API Call and implementing filters by sending them as query parameters to product api calls.
Persisted user login state by keeping jwt token in local storage, Sending it in headers of further api calls to authorize the user.
Technologies used: React JS, JS, CSS, Bootstrap, Routing, REST API Calls, Local Storage, JWT Token, Authorization, Authentication
Jobby App
Implemented Jobby App where users can log in and can see a list of jobs with search by Job title, filters based on Salary range and Employment type, etc
Implemented different pages like Login, Home, Jobs, Job item details using React components, props, state, lists, event handlers, form inputs.
Authenticating by taking username, password and doing login post HTTP API Call.
Persisted user login state by keeping jwt token in client storage, Sending it in headers of further API calls to authorize the user.
Implemented different routes for Login, Home, Jobs, Job item details pages by using React Router components Route, Switch, Link.
Implemented filters and search text by sending them as query parameters to jobs API calls.
Redirecting to the login page if the user tries to open Home, Jobs, Job item details routes which need authentication by implementing protected Route.
Technologies used: React JS, JS, CSS, Bootstrap, Routing, REST API Calls, Local Storage, JWT Token, Authorization, Authentication
Nxt Watch
Implemented Nxt Watch application which is a clone for YouTube where users can log in and can see a list of videos like Trending, Gaming, Saved videos, and also can search videos and view specific video details, and users can toggle the theme (Light/Dark).
Implemented Different pages like Login, Home, Trending, Gaming, Saved videos using React components, props, state, lists, event handlers, form inputs.
Authenticating by taking username, password and doing login post HTTP API Call.
Persisted user login state by keeping jwt token in local storage, Sending it in headers of further API calls to authorize the user.
Implemented different routes for Login, Home, Trending, Gaming, Saved videos, Video item details pages by using React Router components Route, Switch, Link.
Redirecting to the login page if the user tries to open Home, Trending, Gaming, Saved videos, Video item details routes which need authentication by implementing protected Route.
Technologies used: React JS, JS, CSS, Bootstrap, Routing, REST API Calls, Local Storage, JWT Token, Authorization, Authentication
Mini Projects
Movies App (Netflix/Amazon Prime Clone)
Implemented responsive OTT platform app like Netflix/Amazon Clone where users can see movies like popular, trending, top-rated, and also can search movies and view specific movie details.
Implemented different routes for features like login, home, popular, profile by using React Router components Route, Switch, Link.
Implemented horizontal scrolling (In trending, top-rated, and originals sections) using React Third Party library called React Slick.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Explored open-source APIs for movies database and picked TMDb APIs for authentication, movies by category, and movie search APIs.
Implemented username and password authentication and persisted login state using client storage.
Implemented a protected route to ensure only authenticated users can access the pages like user profile, movies by category, etc.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, React Slick, Figma, client storage.
Covid Dashboard
Implemented a responsive Covid Dashboard where users can see confirmed, active, recovered and deceased cases in India state wise. Users also can search by state and see state specific cases info with different types of graphs.
Implemented different routes for features like home, state-specific details, and about by using React Router components Route, Switch, Link.
Implemented graphs like a bar chart, line chart using React Third Party library Recharts to show different stats.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Explored open-source APIs for covid info and picked covid19india.org APIs for state-wise stats, timelines for graphs, faqs related to COVID.
Technologies used: HTML, CSS, JavaScript, React JS, Recharts, Figma
Tasty Kitchens (Swiggy/Zomato Clone)
Implemented a responsive Online Food Ordering System like Swiggy/Zomato where users can see popular restaurants with sort by rating, specific restaurant details, adding or removing food items to cart, and payments section.
Implemented different routes for features like login, home, specific restaurant details, cart by using React Router components Route, Switch, Link.
Implemented horizontal scrolling (carousel images on the home page) using React Third Party library called React Slick.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Used fetch to call REST APIs for popular restaurants with sort by, specific restaurant details.
Implemented username and password authentication and persisted login state using client storage.
Implemented a protected route to ensure only authenticated users can access the pages like home, specific restaurant details, etc.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, React Slick, Figma, client storage.
Spotify Remix (Spotify Clone)
Implemented responsive music streaming app like Spotify Clone where users can see featured playlists, categories, new releases based on user country, playlists, specific category details, specific playlist details, specific album details, and users can play the song.
Implemented different routes for features like login, home, specific playlist, specific album by using React Router components Route, Switch, Link.
Implemented songs in the specific playlist, category, or Album using HTML audio tags.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Explored open-source APIs for music related info and picked Spotify Developer APIs for featured Playlists, categories, new releases based on user country, specific category details, specific album details.
Implemented Authentication by integrating Spotify developer account and persisted login state using client storage.
Implemented protected route to ensure only authenticated users are able to access the pages like featured playlists, categories, specific album details, etc.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, Figma, client storage, Spotify Developer APIs.
Mini Games (Collection of Memory Games)
Implemented a responsive Mini Games app where users can play a collection of memory games like Emoji Game, Rock Paper Scissors, Memory Matrix, and Card Flip Game by following given instructions.
Developed all the games by using components, Props, State, etc. in React and Arrays, Objects and their methods, etc. in JavaScript.
Implemented rules modal for every game by using third-party library React modal.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Implemented different routes for each game and home route to show all games at one place by using React Router components Route, Switch, Link.
Implemented Emoji Game where the user needs to select every emoji exactly once though their positions are randomized when the user selects an Emoji.
Implemented Rock Paper Scissors Game where the user can select either Rock, Paper, Scissors, and the game result should be based on user and opponent user choices.
Implemented Memory Matrix Game where the user can guess all N hidden(shown for a while initially) cells in Nth level within the given time.
Implemented Card Flip Memory Game where the user can find all the matching cards within the given time.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, React Modal, Figma, React Progress.
Task Manager (Trello Clone)
Implemented responsive Task manager app like Trello Clone where users can log in and see a list of boards in an Organization, a collection of Lists in a specific board, and a list of tasks in a specific List.
Implemented different routes for features like login, home, specific board by using React Router components Route, Switch, Link.
Implemented Drag and Drop functionality (Drag and Drop Task within a List), Modal using React Third Party libraries called React Beautiful DND and React Modal.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Explored open-source APIs for task managing tools and picked Trello Developer APIs for creating a board in an Organization, creating a list in a specific board and creating a Task in a specific List and other crud operations.
Implemented Authentication by integrating Trello developer account and persisted login state using client storage.
Implemented protected route to ensure only authenticated users can access the pages like user list of boards in an Organization and specific board details, etc.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, Figma, React Beautiful DND, React Modal, client storage.
Github Profile Visualizer
Implemented a responsive Github Profile Visualizer where users can see profile, repositories, specified repository details, and analysis of repositories related to Github username.
Implemented different routes for features like home, profile, specific repository by using React Router components Route, Switch, Link.
Implemented graphs like a Pie chart and Linear chart using React Third Party library called Recharts.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Used Github open APIs for fetching Github user profile, Repositories, and specific Repository details.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, Recharts, Figma, Github APIs.
Book Hub (Goodreads Clone)
Implemented responsive Goodreads Clone where users can log in and see a list of books, bookshelves like all shelves (books sorted by rating), completed reading shelf, currently reading shelf, want to read shelf , and user can also search books with author's name and book's name.
Implemented different routes for features like login, home, bookshelves by using React Router components Route, Switch, Link.
Implemented stars (rating), dropdown (select) using React Third Party libraries called React Rating Stars, React Select.
Used Figma mockups to implement UI-rich and pixel-perfect React components.
Used fetch to call REST APIs for a list of books, bookshelves details and books search APIs.
Implemented username and password authentication and persisted login state using client storage.
Implemented a protected route to ensure only authenticated users can access the pages like home, bookshelves, etc.
Technologies used: HTML, CSS, JavaScript, React JS, Bootstrap, React Rating Stars, React Select,  Figma,  client storage.
Loading...
-
